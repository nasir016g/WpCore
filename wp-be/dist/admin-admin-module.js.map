{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./src/app/_services/excelService.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/webpage/shared/admin-webpage.model.ts","webpack:///./src/app/admin/webpage/webpage-detail/webpage-detail.component.html","webpack:///./src/app/admin/webpage/webpage-detail/webpage-detail.component.ts","webpack:///./src/app/admin/webpage/webpage-list/webpage-list.component.html","webpack:///./src/app/admin/webpage/webpage-list/webpage-list.component.ts"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public exportExcel(excelFileName: string): void {\r\n    this.getExcelFromServer()\r\n      .subscribe(\r\n        (blob) => {\r\n          this.saveAsExcelFile(blob, excelFileName);\r\n        },\r\n        response => {\r\n          console.log(\"POST in error\", response);\r\n        },\r\n        () => {\r\n          console.log(\"POST observable is now completed.\");\r\n        });;\r\n  }\r\n\r\n  getExcelFromServer(): Observable<Blob> {\r\n    // const headers = new HttpHeaders({\r\n    //   'Content-Type': 'application/json',\r\n    //   'Accept': 'application/json'\r\n    // });\r\n\r\n    return this.httpClient.get<Blob>('https://localhost:5001/api/admin/webpage/download',\r\n      {\r\n        // headers: headers, \r\n        responseType: 'blob' as 'json'\r\n      });\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WebPageListComponent } from './webpage/webpage-list/webpage-list.component';\r\nimport { WebPageDetailComponent } from './webpage/webpage-detail/webpage-detail.component';\r\nimport { TooltipModule, TabsModule } from 'ngx-bootstrap';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { ExcelService } from '../_services/excelService';\r\n\r\nexport const ROUTES: Routes = [\r\n  {\r\n    path: 'webpage',  \r\n    children: [\r\n      { path: 'list', component: WebPageListComponent },\r\n      { path: 'add', component: WebPageDetailComponent },\r\n      { path: 'edit/:id', component: WebPageDetailComponent },\r\n    ],        \r\n  },\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    TooltipModule.forRoot(), // must include here\r\n    TabsModule.forRoot(), // must include here\r\n    SharedModule,\r\n    CommonModule,\r\n    RouterModule.forChild(ROUTES)\r\n  ],\r\n  declarations: [\r\n    WebPageListComponent,\r\n    WebPageDetailComponent,\r\n  ],\r\n  providers: [ExcelService]\r\n\r\n})\r\nexport class AdminModule { }\r\n","export class BaseModel {\r\n    id: number = -1 ;\r\n}\r\n\r\n\r\nexport class AdminWebPage extends BaseModel {    \r\n    parentId: number;\r\n    virtualPath: string;\r\n    navigationName: string;\r\n    displayOrder: number;\r\n    visible: boolean;\r\n    allowAnonymousAccess: boolean;\r\n    metaKeywords: string;\r\n    metaDescription: string;\r\n    metaTitle: string;\r\n    roles: WebPageRoleModel[];\r\n}\r\n\r\nexport class WebPageRoleModel {\r\n    id: boolean;\r\n    name: string;\r\n}\r\n\r\n\r\n","module.exports = \"<h1>Page details</h1>\\r\\n<hr>\\r\\n\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <tabset>\\r\\n        <tab heading=\\\"General\\\">\\r\\n            <div class=\\\"form-group row \\\">\\r\\n                <label for=\\\"virtualPath\\\" class=\\\"col-md-2 col-form-label\\\">Virtual path</label>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"virtualPath\\\" id=\\\"virtualPath\\\">\\r\\n                    <control-messages [control]=\\\"form.controls.virtualPath\\\"></control-messages>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\">       \\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"\\\" class=\\\"col-md-2 col-form-label\\\">Navigation Name</label>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"navigationName\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <control-messages [control]=\\\"form.controls.navigationName\\\"></control-messages>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"visible\\\" class=\\\"col-md-2 col-form-label\\\">displayOrder</label>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"displayOrder\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"visible\\\" class=\\\"col-md-2 col-form-label\\\">Visible</label>\\r\\n                <div class=\\\"col-md-4 pt-3\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"float-left\\\" formControlName=\\\"visible\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"allowAnonymousAccess\\\" class=\\\"col-md-2 col-form-label\\\">AllowAnonymousAccess</label>\\r\\n                <div class=\\\"col-md-4 pt-3\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"float-left\\\" formControlName=\\\"allowAnonymousAccess\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </tab>\\r\\n        <tab heading=\\\"Meta's\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div calss=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                \\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Title</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaTitle\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                \\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Description</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaDescription\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                \\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Keywords</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaKeywords\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                \\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Title</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaTitle\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                \\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Description</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaDescription\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                \\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Keywords</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaKeywords\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n           \\r\\n        </tab>\\r\\n        <tab heading=\\\"Sections\\\"></tab>\\r\\n    </tabset>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <div class=\\\"col-md-10 text-left\\\">\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Save\\\" />\\r\\n            <input type=\\\"button\\\" class=\\\"btn btn-warning\\\" value=\\\"Back to list\\\" (click)=\\\"cancel()\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertService } from 'ngx-alerts';\r\nimport { AdminWebPage } from '../shared/admin-webpage.model';\r\nimport { from } from 'rxjs';\r\n\r\nimport { AdminWebpageService } from '../shared/admin-webpage.service';\r\n\r\n@Component({\r\n  selector: 'app-webpage',\r\n  templateUrl: './webpage-detail.component.html'\r\n})\r\n\r\nexport class WebPageDetailComponent implements OnInit {\r\n  form: FormGroup;\r\n  model: AdminWebPage = new AdminWebPage();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private pageService: AdminWebpageService) {\r\n\r\n    if (this.activatedRoute.snapshot.params['id']) {\r\n      this.model.id = parseInt(this.activatedRoute.snapshot.params['id']);\r\n    }\r\n    this.buildForm(this.formBuilder);\r\n  }\r\n\r\n  private buildForm(formBuilder: FormBuilder) {\r\n    this.form = formBuilder.group({\r\n      id: this.model.id,\r\n      virtualPath: [this.model.virtualPath, [Validators.required, Validators.minLength(3)]],\r\n      navigationName: [this.model.navigationName, [Validators.required]],\r\n      visible: [this.model.visible],\r\n      allowAnonymousAccess: [this.model.allowAnonymousAccess],\r\n      displayOrder: [this.model.displayOrder],\r\n      metaTitle: [this.model.metaTitle],\r\n      metaDescription: [this.model.metaDescription],\r\n      metaKeywords: [this.model.metaKeywords]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.model.id > 0) {\r\n      // edit\r\n      this.pageService.getPageById(this.model.id)\r\n        .subscribe(resp => {\r\n          this.model = resp;\r\n          this.buildForm(this.formBuilder);\r\n        }\r\n          , error => this.alertService.danger(error));\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['admin/webpage/list']);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.pageService.save(this.form.value)\r\n        .subscribe(resp => {\r\n          this.model = resp;\r\n          this.alertService.success('Page updated successfully.')\r\n\r\n        }\r\n          , error => {\r\n            for (var fieldName in error.error) {\r\n              this.alertService.danger(error.error[fieldName]);\r\n            }\r\n\r\n            console.log(error.error)\r\n          })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <p>Are you sure you want to delet?</p>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"confirm()\\\" >Yes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"decline()\\\" >No</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- <div class=\\\"alert-danger\\\">{{errorMessage}}</div> -->\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Virtual path</th>\\r\\n            <th>Navigation name</th>\\r\\n            <th>  <button class=\\\"btn btn-success btn-circle\\\" \\r\\n                [routerLink]=\\\"['/admin/webpage/add']\\\"          \\r\\n                      title=\\\"Add Web Page\\\">\\r\\n                      <i class=\\\"fa fa-plus\\\"></i> \\r\\n              </button> </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let wp of webpages\\\">\\r\\n            <td>{{wp.id}}</td>\\r\\n            <td>{{wp.virtualPath}}</td>\\r\\n            <td>{{wp.navigationName}}</td>           \\r\\n            <td style=\\\"width: 70px;\\\">               \\r\\n                   <a [routerLink]=\\\"['/admin/webpage/edit', wp.id]\\\"> <i class=\\\"fa fa-edit pointer\\\"></i></a>                  \\r\\n                  <i class=\\\"fa fa-trash pointer\\\"    \\r\\n                    (click)=\\\"delete(webpage, template)\\\" title=\\\"Delete\\\"></i>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"downloadFile()\\\"><i class=\\\"fa fa-file-excel-o\\\"></i> Download</button>\\r\\n\"","import { Component, OnInit, TemplateRef  } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { Router } from '@angular/router';\r\nimport { AdminWebPage } from '../shared/admin-webpage.model';\r\nimport { AdminWebpageService } from '../shared/admin-webpage.service';\r\nimport { ExcelService } from '../../../_services/excelService';\r\n\r\n@Component({\r\n  selector: 'app-webpage-list',\r\n  templateUrl: './webpage-list.component.html'\r\n})\r\nexport class WebPageListComponent implements OnInit {\r\n  webpages: Array<AdminWebPage> = [];\r\n  deletingPage: AdminWebPage;\r\n  modalRef: BsModalRef;\r\n  errorMessage: any;\r\n\r\n  constructor(private pageService: AdminWebpageService,\r\n    private modalService: BsModalService, private excelService:ExcelService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.pageService.getAll().subscribe(\r\n      data => this.webpages = data,\r\n      err => {\r\n        this.errorMessage = err.error        \r\n      } \r\n    );\r\n  }\r\n\r\n  delete(webpage: AdminWebPage, template: TemplateRef<any>) {\r\n    this.deletingPage = webpage;\r\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\r\n  }  \r\n \r\n  confirm(): void {\r\n    this.pageService.delete(this.deletingPage.id).subscribe(\r\n      () => {\r\n        this.getAll();\r\n      })   \r\n    this.modalRef.hide();\r\n  }\r\n \r\n  decline(): void {\r\n    this.deletingPage = null;\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  downloadFile() {\r\n    this.excelService.exportExcel('sample-from-server');\r\n  }\r\n}\r\n"],"sourceRoot":""}