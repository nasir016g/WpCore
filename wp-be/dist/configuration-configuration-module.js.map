{"version":3,"sources":["webpack:///./src/app/configuration/access-control-list/access-control-list.component.html","webpack:///./src/app/configuration/access-control-list/access-control-list.component.ts","webpack:///./src/app/configuration/access-control-list/access-control.service.ts","webpack:///./src/app/configuration/configuration-routing.module.ts","webpack:///./src/app/configuration/configuration.module.ts","webpack:///./src/app/configuration/install/install.component.html","webpack:///./src/app/configuration/install/install.component.ts","webpack:///./src/app/configuration/install/install.service.ts"],"names":[],"mappings":"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","file":"configuration-configuration-module.js","sourcesContent":["module.exports = \"\\r\\n<table *ngIf=\\\"claims\\\" class=\\\"table table-bordered\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th class=\\\"text-sm-left\\\">Claim</th>\\r\\n            <th *ngFor=\\\"let role of claims.availableRoles\\\">{{role.name}}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let claim of claims.availableClaims\\\">\\r\\n            <td class=\\\"text-sm-left\\\">{{claim.claimValue}}</td>\\r\\n            <td *ngFor=\\\"let r of claims.availableRoles\\\">\\r\\n                <input type=\\\"checkbox\\\"\\r\\n                    [(ngModel)]=\\\"claims.allowed[toLowerFirstChar(claim.claimValue)][toLowerFirstChar(r.name)]\\\">\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<div class=\\\"col text-right\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"update()\\\">Save</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccessControlService } from './access-control.service';\r\nimport { ClaimRoleModel } from './claim-role.model';\r\nimport { ConcatSource } from 'webpack-sources';\r\nimport { AlertService } from 'ngx-alerts';\r\n\r\n@Component({\r\n  selector: 'app-access-control-list',\r\n  templateUrl: './access-control-list.component.html'\r\n})\r\nexport class AccessControlListComponent implements OnInit {\r\n  claims: ClaimRoleModel;\r\n  constructor(private accessControlService: AccessControlService, private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.getClaims();\r\n  }\r\n\r\n  getClaims() {\r\n    this.accessControlService.getClaims().subscribe(\r\n      (rez) => {\r\n        this.claims = rez;       \r\n      }\r\n    )    \r\n  }\r\n\r\n  update() {\r\n    this.accessControlService.update(this.claims).subscribe((rez) => {\r\n      console.log(rez);\r\n      this.alertService.success('Updated successfully.')\r\n\r\n    })\r\n  }\r\n\r\n  toLowerFirstChar(value: string) : string {\r\n    return value.replace(/^\\w/, c => c.toLowerCase())\r\n  }  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ClaimRoleModel } from './claim-role.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccessControlService {\r\n\r\n  url = environment.apiUrl + 'admin/security/claims';\r\n  \r\n  constructor(private http: HttpClient) { }\r\n\r\n  getClaims(){\r\n    return this.http.get<ClaimRoleModel>(this.url);\r\n } \r\n\r\n update(model: ClaimRoleModel){\r\n   const headers = new HttpHeaders().set('Content-type', 'application/json');\r\n   return this.http.put(this.url, JSON.stringify(model)\r\n   , {headers: headers})\r\n }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { AccessControlListComponent } from './access-control-list/access-control-list.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InstallComponent } from './install/install.component';\n\nconst routes: Routes = [\n  { path: 'acl', component: AccessControlListComponent},\n  { path: 'install', component: InstallComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConfigurationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { ConfigurationRoutingModule } from './configuration-routing.module';\nimport { SharedModule } from '../shared/shared.module';\nimport { AccessControlListComponent } from './access-control-list/access-control-list.component';\nimport { InstallComponent } from './install/install.component';\n\n@NgModule({\n  declarations: [\n    AccessControlListComponent,\n    InstallComponent],\n  imports: [\n    SharedModule,\n    ConfigurationRoutingModule\n  ]\n})\nexport class ConfigurationModule { }\n","module.exports = \"<p>\\r\\n  install works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { InstallService } from './install.service';\r\n\r\n@Component({\r\n  selector: 'app-install',\r\n  templateUrl: './install.component.html',\r\n  styles: []\r\n})\r\nexport class InstallComponent implements OnInit {\r\n\r\n  constructor(private installService: InstallService) { }\r\n\r\n  ngOnInit() {\r\n    this.installData();\r\n  }\r\n\r\n  installData() {\r\n    this.installService.installData().subscribe(() => console.log(\"data installed.\")\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InstallService {\r\nurl = environment.apiUrl + 'install'\r\n  constructor(private http: HttpClient) { }\r\n\r\n  installData(){\r\n    return this.http.get<string>(this.url);\r\n }\r\n}\r\n"],"sourceRoot":""}