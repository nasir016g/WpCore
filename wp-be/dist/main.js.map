{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/install/install.component.html","webpack:///./src/app/admin/install/install.component.ts","webpack:///./src/app/admin/install/shared/install.service.ts","webpack:///./src/app/admin/nav/nav.component.html","webpack:///./src/app/admin/nav/nav.component.ts","webpack:///./src/app/admin/webpage/shared/admin-webpage.model.ts","webpack:///./src/app/admin/webpage/shared/admin-webpage.service.ts","webpack:///./src/app/admin/webpage/webpage-detail/webpage-detail.component.html","webpack:///./src/app/admin/webpage/webpage-detail/webpage-detail.component.ts","webpack:///./src/app/admin/webpage/webpage-list/webpage-list.component.html","webpack:///./src/app/admin/webpage/webpage-list/webpage-list.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/security/account/login/login.component.html","webpack:///./src/app/security/account/login/login.component.ts","webpack:///./src/app/security/account/shared/authentication.service.ts","webpack:///./src/app/security/configuration/access-control-list/access-control-list.component.html","webpack:///./src/app/security/configuration/access-control-list/access-control-list.component.ts","webpack:///./src/app/security/configuration/shared/access-control.service.ts","webpack:///./src/app/security/role/role-list/role-list.component.html","webpack:///./src/app/security/role/role-list/role-list.component.ts","webpack:///./src/app/security/role/shared/role.service.ts","webpack:///./src/app/security/user/shared/user.model.ts","webpack:///./src/app/security/user/shared/user.service.ts","webpack:///./src/app/security/user/user-details/user-details.component.html","webpack:///./src/app/security/user/user-details/user-details.component.ts","webpack:///./src/app/security/user/user-list/user-list.component.html","webpack:///./src/app/security/user/user-list/user-list.component.ts","webpack:///./src/app/shared/components/control-messages.component.ts","webpack:///./src/app/shared/guard/auth.guard.ts","webpack:///./src/app/shared/interceptors/error.interceptor.ts","webpack:///./src/app/shared/interceptors/tenant.interceptor.ts","webpack:///./src/app/shared/services/excelService.ts","webpack:///./src/app/shared/services/validation.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<p>\\n  install works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { InstallService } from './shared/install.service';\n\n@Component({\n  selector: 'app-install',\n  templateUrl: './install.component.html',\n  styles: []\n})\nexport class InstallComponent implements OnInit {\n\n  constructor(private installService: InstallService) { }\n\n  ngOnInit() {\n    this.installData();\n  }\n\n  installData() {\n    this.installService.installData().subscribe(() => console.log(\"data installed.\")\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstallService {\nurl = environment.apiUrl + 'install'\n  constructor(private http: HttpClient) { }\n\n  installData(){\n    return this.http.get<string>(this.url);\n }\n}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['']\\\">WpCore </a>\\r\\n\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\"\\r\\n      aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <!-- admin -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['admin/webpage/list']\\\"><i class=\\\"fa fa-bars\\\"></i> webpages</a>\\r\\n        </li>\\r\\n        <div class=\\\"btn-group\\\" dropdown>\\r\\n          <button id=\\\"button-basic\\\" dropdownToggle type=\\\"button\\\" class=\\\"btn btn-link\\\" aria-controls=\\\"dropdown-basic\\\">\\r\\n            <i class=\\\"fa fa-lock\\\"></i> Security <span class=\\\"caret\\\"></span>\\r\\n          </button>\\r\\n          <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['security/roles']\\\">Roles</a></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['security/users']\\\">Users</a></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a></li>\\r\\n            <li class=\\\"divider dropdown-divider\\\"></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Separated link</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" dropdown>\\r\\n          <button id=\\\"button-basic\\\" dropdownToggle type=\\\"button\\\" class=\\\"btn btn-link\\\" aria-controls=\\\"dropdown-basic\\\">\\r\\n            <i class=\\\"fa fa-cogs\\\"></i> Configuration <span class=\\\"caret\\\"></span>\\r\\n          </button>\\r\\n          <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['config/acl']\\\">Access control list</a></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a></li>\\r\\n            <li class=\\\"divider dropdown-divider\\\"></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Separated link</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">About</a>\\r\\n        </li> -->\\r\\n      </ul>\\r\\n      <!-- <ul class=\\\"navbar-nav\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"https://github.com/nasir016g\\\">\\r\\n              <i class=\\\"fa fa-github\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\r\\n        <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n      </form> -->\\r\\n    </div>\\r\\n\\r\\n    <a class=\\\"ml-auto\\\" href=\\\"http://localhost:9000\\\">Go to website</a>\\r\\n\\r\\n    <!-- login -->\\r\\n    <div *ngIf=\\\"isAuthenticated\\\">\\r\\n      <a [routerLink]=\\\"\\\" class=\\\"nav-link m-2\\\" (click)=\\\"logout($event)\\\">Logout</a>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isAuthenticated\\\">\\r\\n      <a [routerLink]=\\\"['login']\\\" class=\\\" nav-link m-2\\\">Login</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../../security/account/shared/authentication.service';\r\nimport { AdminWebPage } from '../webpage/shared/admin-webpage.model';\r\nimport { Router } from '@angular/router';\r\nimport { AdminWebpageService } from '../webpage/shared/admin-webpage.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html'\r\n})\r\nexport class NavComponent implements OnInit {\r\n  webpages: Array<AdminWebPage> = [];\r\n  errorMessage: any;\r\n  isCollapsed = true;\r\n  isAuthenticated: boolean\r\n  constructor(private pageService: AdminWebpageService, public authenticationService: AuthenticationService, private router: Router) {\r\n    this.isAuthenticated = authenticationService.isAuthenticated();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getNavigations();\r\n  }\r\n\r\n  getNavigations() {\r\n    this.pageService.getAll().subscribe(\r\n      res => this.webpages = res,\r\n      err => {\r\n        this.errorMessage = err.error\r\n      }\r\n    );\r\n  }  \r\n\r\n  logout(event) {\r\n    event.preventDefault;\r\n    this.authenticationService.logout();\r\n    window.location.href = \"login\";\r\n  }\r\n}\r\n","export class BaseModel {\r\n    id: number = -1 ;\r\n}\r\n\r\n\r\nexport class AdminWebPage extends BaseModel {    \r\n    parentId: number;\r\n    virtualPath: string;\r\n    navigationName: string;\r\n    displayOrder: number;\r\n    visible: boolean;\r\n    allowAnonymousAccess: boolean;\r\n    metaKeywords: string;\r\n    metaDescription: string;\r\n    metaTitle: string;\r\n    roles: WebPageRoleModel[];\r\n}\r\n\r\nexport class WebPageRoleModel {\r\n    id: boolean;\r\n    name: string;\r\n}\r\n\r\n\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpErrorResponse } from '@angular/common/http/src/response';\r\n\r\nimport {throwError as observableThrowError,  Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\nimport { AdminWebPage, BaseModel } from './admin-webpage.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminWebpageService {\r\n  url = environment.apiUrl + 'admin/webpage/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll() {\r\n    return this.http.get<AdminWebPage[]>(this.url)\r\n    .pipe(\r\n    catchError(this.errorHandler));\r\n  }\r\n\r\n  getPageById(id) {\r\n    return this.http.get<AdminWebPage>(this.url + id)\r\n\r\n    .pipe(\r\n      catchError(this.errorHandler));\r\n  }  \r\n\r\n  delete(id) {\r\n    return  this.http.delete(this.url + id)\r\n    .pipe(\r\n      catchError(this.errorHandler));\r\n  }\r\n\r\n  save(t: any) : Observable<any> {\r\n    const model = t as BaseModel; \r\n    const headers = new HttpHeaders().set('Content-type', 'application/json');    \r\n    if(model.id > 0)\r\n    {\r\n      //edit\r\n      return this.http.put<any>(this.url + model.id, JSON.stringify(model), {\r\n        headers: headers,\r\n      })\r\n      .pipe(\r\n        catchError(this.errorHandler))\r\n    } else {\r\n      // new      \r\n      return this.http.post<any>(this.url, JSON.stringify(model), {\r\n        headers: headers,\r\n      })\r\n      .pipe(\r\n        catchError(this.errorHandler))\r\n     }\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) { \r\n    console.log(error);  \r\n    return observableThrowError(error || 'Internal server error');\r\n  }\r\n\r\n}\r\n","module.exports = \"<h1>Page details</h1>\\r\\n<hr>\\r\\n\\r\\n\\r\\n<form [formGroup]=\\\"form\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <tabset>\\r\\n        <tab heading=\\\"General\\\">\\r\\n            <div class=\\\"form-group row \\\">\\r\\n                <label for=\\\"virtualPath\\\" class=\\\"col-md-2 col-form-label\\\">Virtual path</label>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"virtualPath\\\" id=\\\"virtualPath\\\">\\r\\n                    <control-messages [control]=\\\"form.controls.virtualPath\\\"></control-messages>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\">       \\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"\\\" class=\\\"col-md-2 col-form-label\\\">Navigation Name</label>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"navigationName\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <control-messages [control]=\\\"form.controls.navigationName\\\"></control-messages>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"visible\\\" class=\\\"col-md-2 col-form-label\\\">displayOrder</label>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"displayOrder\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"visible\\\" class=\\\"col-md-2 col-form-label\\\">Visible</label>\\r\\n                <div class=\\\"col-md-4 pt-3\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"float-left\\\" formControlName=\\\"visible\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group row\\\">\\r\\n                <label for=\\\"allowAnonymousAccess\\\" class=\\\"col-md-2 col-form-label\\\">AllowAnonymousAccess</label>\\r\\n                <div class=\\\"col-md-4 pt-3\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"float-left\\\" formControlName=\\\"allowAnonymousAccess\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </tab>\\r\\n        <tab heading=\\\"Meta's\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div calss=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                \\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Title</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaTitle\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                \\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Description</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaDescription\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                \\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Keywords</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaKeywords\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                \\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Title</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaTitle\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                \\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Description</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaDescription\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                \\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"\\\" class=\\\"col-md-4 col-form-label\\\">Meta Keywords</label>\\r\\n                                <div class=\\\"col-md-8\\\">\\r\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"metaKeywords\\\">\\r\\n                                </div>\\r\\n                            </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n           \\r\\n        </tab>\\r\\n        <tab heading=\\\"Sections\\\"></tab>\\r\\n    </tabset>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <div class=\\\"col-md-10 text-left\\\">\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Save\\\" />\\r\\n            <input type=\\\"button\\\" class=\\\"btn btn-warning\\\" value=\\\"Back to list\\\" (click)=\\\"cancel()\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertService } from 'ngx-alerts';\r\nimport { AdminWebPage } from '../shared/admin-webpage.model';\r\nimport { from } from 'rxjs';\r\n\r\nimport { AdminWebpageService } from '../shared/admin-webpage.service';\r\n\r\n@Component({\r\n  selector: 'app-webpage',\r\n  templateUrl: './webpage-detail.component.html'\r\n})\r\n\r\nexport class WebPageDetailComponent implements OnInit {\r\n  form: FormGroup;\r\n  model: AdminWebPage = new AdminWebPage();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private alertService: AlertService,\r\n    private pageService: AdminWebpageService) {\r\n\r\n    if (this.activatedRoute.snapshot.params['id']) {\r\n      this.model.id = parseInt(this.activatedRoute.snapshot.params['id']);\r\n    }\r\n    this.buildForm(this.formBuilder);\r\n  }\r\n\r\n  private buildForm(formBuilder: FormBuilder) {\r\n    this.form = formBuilder.group({\r\n      id: this.model.id,\r\n      virtualPath: [this.model.virtualPath, [Validators.required, Validators.minLength(3)]],\r\n      navigationName: [this.model.navigationName, [Validators.required]],\r\n      visible: [this.model.visible],\r\n      allowAnonymousAccess: [this.model.allowAnonymousAccess],\r\n      displayOrder: [this.model.displayOrder],\r\n      metaTitle: [this.model.metaTitle],\r\n      metaDescription: [this.model.metaDescription],\r\n      metaKeywords: [this.model.metaKeywords]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.model.id > 0) {\r\n      // edit\r\n      this.pageService.getPageById(this.model.id)\r\n        .subscribe(resp => {\r\n          this.model = resp;\r\n          this.buildForm(this.formBuilder);\r\n        }\r\n          , error => this.alertService.danger(error));\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['admin/webpage/list']);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.pageService.save(this.form.value)\r\n        .subscribe(resp => {\r\n          this.model = resp;\r\n          this.alertService.success('Page updated successfully.')\r\n\r\n        }\r\n          , error => {\r\n            for (var fieldName in error.error) {\r\n              this.alertService.danger(error.error[fieldName]);\r\n            }\r\n\r\n            console.log(error.error)\r\n          })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <p>Are you sure you want to delet?</p>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"confirm()\\\" >Yes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"decline()\\\" >No</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<!-- <div class=\\\"alert-danger\\\">{{errorMessage}}</div> -->\\r\\n<table class=\\\"table table-bordered\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>ID</th>\\r\\n            <th>Virtual path</th>\\r\\n            <th>Navigation name</th>\\r\\n            <th>  <button class=\\\"btn btn-success btn-circle\\\" \\r\\n                [routerLink]=\\\"['/admin/webpage/add']\\\"          \\r\\n                      title=\\\"Add Web Page\\\">\\r\\n                      <i class=\\\"fa fa-plus\\\"></i> \\r\\n              </button> </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let wp of webpages\\\">\\r\\n            <td>{{wp.id}}</td>\\r\\n            <td>{{wp.virtualPath}}</td>\\r\\n            <td>{{wp.navigationName}}</td>           \\r\\n            <td style=\\\"width: 70px;\\\">               \\r\\n                   <a [routerLink]=\\\"['/admin/webpage/edit', wp.id]\\\"> <i class=\\\"fa fa-edit pointer\\\"></i></a>                  \\r\\n                  <i class=\\\"fa fa-trash pointer\\\"    \\r\\n                    (click)=\\\"delete(webpage, template)\\\" title=\\\"Delete\\\"></i>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"downloadFile()\\\"><i class=\\\"fa fa-file-excel-o\\\"></i> Download</button>\\r\\n\"","import { Component, OnInit, TemplateRef  } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { Router } from '@angular/router';\r\nimport { AdminWebPage } from '../shared/admin-webpage.model';\r\nimport { AdminWebpageService } from '../shared/admin-webpage.service';\r\nimport { ExcelService } from '../../../shared/services/excelService';\r\n\r\n@Component({\r\n  selector: 'app-webpage-list',\r\n  templateUrl: './webpage-list.component.html'\r\n})\r\nexport class WebPageListComponent implements OnInit {\r\n  webpages: Array<AdminWebPage> = [];\r\n  deletingPage: AdminWebPage;\r\n  modalRef: BsModalRef;\r\n  errorMessage: any;\r\n\r\n  constructor(private pageService: AdminWebpageService,\r\n    private modalService: BsModalService, private excelService:ExcelService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll() {\r\n    this.pageService.getAll().subscribe(\r\n      data => this.webpages = data,\r\n      err => {\r\n        this.errorMessage = err.error        \r\n      } \r\n    );\r\n  }\r\n\r\n  delete(webpage: AdminWebPage, template: TemplateRef<any>) {\r\n    this.deletingPage = webpage;\r\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\r\n  }  \r\n \r\n  confirm(): void {\r\n    this.pageService.delete(this.deletingPage.id).subscribe(\r\n      () => {\r\n        this.getAll();\r\n      })   \r\n    this.modalRef.hide();\r\n  }\r\n \r\n  decline(): void {\r\n    this.deletingPage = null;\r\n    this.modalRef.hide();\r\n  }\r\n\r\n  downloadFile() {\r\n    this.excelService.exportExcel('sample-from-server');\r\n  }\r\n}\r\n","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    <!-- To show this line of text remove fixed-top from nav component -->\\r\\n    Welcome to {{title}}!\\r\\n  </h1>\\r\\n\\r\\n  <ngx-alerts></ngx-alerts>\\r\\n  <app-nav></app-nav>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <nav class=\\\"navbar fixed-bottom navbar-expand navbar-light bg-light\\\">\\r\\n    <div class=\\\"navbar-text m-auto\\\">\\r\\n      Made by Nasir\\r\\n    </div>\\r\\n  </nav>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BaseRequestOptions, HttpModule } from '@angular/http';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { AlertModule } from 'ngx-alerts';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './admin/nav/nav.component';\r\nimport { AppRouting } from './app.routing';\r\nimport { ErrorInterceptor } from './shared/interceptors/error.interceptor';\r\nimport { RoleListComponent } from './security/role/role-list/role-list.component';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TenantInterceptor } from './shared/interceptors/tenant.interceptor';\r\nimport { UserListComponent } from './security/user/user-list/user-list.component';\r\nimport { UserDetailsComponent } from './security/user/user-details/user-details.component';\r\nimport { UserService } from './security/user/shared/user.service';\r\nimport { AccessControlListComponent } from './security/configuration/access-control-list/access-control-list.component';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { WebPageListComponent } from './admin/webpage/webpage-list/webpage-list.component';\r\nimport { WebPageDetailComponent } from './admin/webpage/webpage-detail/webpage-detail.component';\r\nimport { InstallComponent } from './admin/install/install.component';\r\nimport { TooltipModule, TabsModule, ModalModule, CollapseModule } from 'ngx-bootstrap';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './security/account/login/login.component';\r\nimport { ControlMessagesComponent } from './shared/components/control-messages.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n    BsDropdownModule.forRoot(),\r\n    AppRouting,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    //AdminModule,\r\n    SharedModule,\r\n    AlertModule.forRoot({ maxMessages: 5, timeout: 5000 }),\r\n    ModalModule.forRoot(),\r\n    CollapseModule.forRoot(),\r\n    BsDropdownModule.forRoot(),\r\n\r\n    TooltipModule.forRoot(), // must include here (admin)\r\n    TabsModule.forRoot(), // must include here (admin)\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    RoleListComponent,\r\n    UserListComponent,\r\n    UserDetailsComponent,\r\n    AccessControlListComponent,\r\n\r\n    WebPageListComponent,\r\n    WebPageDetailComponent,\r\n    InstallComponent,\r\n\r\n   \r\n    LoginComponent\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    BaseRequestOptions,\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true, },\r\n    { provide: HTTP_INTERCEPTORS, useClass: TenantInterceptor, multi: true, }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './security/account/login/login.component';\r\nimport { AuthGuard } from './shared/guard/auth.guard';\r\nimport { RoleListComponent } from './security/role/role-list/role-list.component';\r\nimport { UserListComponent } from './security/user/user-list/user-list.component';\r\nimport { UserDetailsComponent } from './security/user/user-details/user-details.component';\r\nimport { AccessControlListComponent } from './security/configuration/access-control-list/access-control-list.component';\r\nimport { WebPageListComponent } from './admin/webpage/webpage-list/webpage-list.component';\r\nimport { WebPageDetailComponent } from './admin/webpage/webpage-detail/webpage-detail.component';\r\nimport { InstallComponent } from './admin/install/install.component';\r\n\r\nconst ROUTES: Routes = [\r\n    { path: 'login', component: LoginComponent },   \r\n    // { path: 'admin', canActivate: [AuthGuard],  loadChildren: './admin/admin.module#AdminModule' },\r\n    { path: 'security/roles', canActivate: [AuthGuard], component: RoleListComponent},\r\n    { path: 'security/users', canActivate: [AuthGuard], component: UserListComponent},\r\n    { path: 'security/users/edit/:userName', canActivate: [AuthGuard], component: UserDetailsComponent},\r\n\r\n    { path: 'config/acl', canActivate: [AuthGuard], component: AccessControlListComponent},\r\n\r\n    {\r\n        path: 'admin/webpage',  \r\n        children: [\r\n          { path: 'list', component: WebPageListComponent },\r\n          { path: 'add', component: WebPageDetailComponent },\r\n          { path: 'edit/:id', component: WebPageDetailComponent },\r\n        ],                \r\n      },\r\n      { path: 'install', component: InstallComponent },\r\n      \r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const AppRouting = RouterModule.forRoot(ROUTES);","module.exports = \"<div class=\\\"row\\\">\\r\\n<div class=\\\"col-sm-4 offset-sm-4 text-center\\\">\\r\\n<form (submit)=\\\"loginUser()\\\" class=\\\"form-signin\\\">\\r\\n\\t\\t<img class=\\\"mb-4\\\" src=\\\"https://getbootstrap.com/assets/brand/bootstrap-solid.svg\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\r\\n\\t\\t<h1 class=\\\"h3 mb-3 font-weight-normal\\\">Please sign in</h1>\\r\\n\\t\\t<label for=\\\"username\\\" class=\\\"sr-only\\\">User name</label>\\r\\n\\t\\t<input [(ngModel)]=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User name\\\" required autofocus>\\r\\n\\t\\t<label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\r\\n\\t\\t<div class=\\\"checkbox mb-3\\\">\\r\\n\\t\\t  <label>\\r\\n\\t\\t\\t<input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\r\\n\\t\\t  </label>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n\\t  </form>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../shared/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html' \r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n  error = '';\r\n\r\n  constructor(private router: Router, private auhenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  loginUser() {\r\n    \r\n    this.auhenticationService.login(this.username, this.password)\r\n      .subscribe(result => {\r\n        if (result === true) { \r\n          window.location.href = \"#\";\r\n        } else {\r\n          // login failed\r\n          this.error = 'Username or password is incorrect';\r\n        }\r\n      });\r\n\r\n  }\r\n}\r\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {  \r\n  public token: string;\r\n\r\n  constructor(private _http: Http){\r\n    // set token if saved in local storage\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.token = currentUser && currentUser.token;\r\n   }\r\n\r\n\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    \r\n    const url = environment.apiUrl + environment.tokenService;\r\n    var headers = new Headers();\r\n    headers.append('Content-Type', 'application/json; charset=utf-8');\r\n\r\n    return this._http.post(url, { Email: username, Password: password }, { headers: headers }).pipe(\r\n      map((response: Response) => {\r\n        // login successful if there's a jwt token in the response\r\n        let token = response.json() && response.json().token;\r\n        if (token) {\r\n          this.token = token;\r\n\r\n          // store username and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('currentUser', JSON.stringify({username: username, token: token}));\r\n          // return true to indicate successful login\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      }));\r\n  }\r\n\r\n  logout(): void {\r\n    this.token = null;\r\n    localStorage.removeItem('currentUser');\r\n    //use sessionStorage to logout when browser closes\r\n\r\n  }\r\n  \r\n  isAuthenticated(): boolean {\r\n    if (localStorage.getItem('currentUser')) {\r\n      // logged in so return true\r\n      return true;\r\n  }\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n    access-control-list works!\\r\\n</p>\\r\\n\\r\\n<table *ngIf=\\\"claims\\\" class=\\\"table table-bordered\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th class=\\\"text-sm-left\\\">Claim</th>\\r\\n            <th *ngFor=\\\"let role of claims.availableRoles\\\">{{role.name}}</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let claim of claims.availableClaims\\\">\\r\\n            <td class=\\\"text-sm-left\\\">{{claim.claimValue}}</td>\\r\\n            <td *ngFor=\\\"let r of claims.availableRoles\\\">\\r\\n                <input type=\\\"checkbox\\\"\\r\\n                    [(ngModel)]=\\\"claims.allowed[toLowerFirstChar(claim.claimValue)][toLowerFirstChar(r.name)]\\\">\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"update()\\\">Save</button>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AccessControlService } from '../shared/access-control.service';\r\nimport { ClaimRoleModel } from '../shared/claim-role.model';\r\nimport { ConcatSource } from 'webpack-sources';\r\nimport { AlertService } from 'ngx-alerts';\r\n\r\n@Component({\r\n  selector: 'app-access-control-list',\r\n  templateUrl: './access-control-list.component.html'\r\n})\r\nexport class AccessControlListComponent implements OnInit {\r\n  claims: ClaimRoleModel;\r\n  constructor(private accessControlService: AccessControlService, private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.getClaims();\r\n  }\r\n\r\n  getClaims() {\r\n    this.accessControlService.getClaims().subscribe(\r\n      (rez) => {\r\n        this.claims = rez;       \r\n      }\r\n    )    \r\n  }\r\n\r\n  update() {\r\n    this.accessControlService.update(this.claims).subscribe((rez) => {\r\n      console.log(rez);\r\n      this.alertService.success('Updated successfully.')\r\n\r\n    })\r\n  }\r\n\r\n  toLowerFirstChar(value: string) : string {\r\n    return value.replace(/^\\w/, c => c.toLowerCase())\r\n  }  \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { ClaimRoleModel } from './claim-role.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccessControlService {\n\n  url = environment.apiUrl + 'admin/security/claims';\n  \n  constructor(private http: HttpClient) { }\n\n  getClaims(){\n    return this.http.get<ClaimRoleModel>(this.url);\n } \n\n update(model: ClaimRoleModel){\n   const headers = new HttpHeaders().set('Content-type', 'application/json');\n   return this.http.put(this.url, JSON.stringify(model)\n   , {headers: headers})\n }\n}\n","module.exports = \"\\r\\n<div class=\\\"card card-body bg-light\\\" *ngIf=\\\"roles\\\">\\r\\n<form [formGroup]=\\\"newRoleForm\\\" (ngSubmit)=\\\"createRole()\\\" class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <!-- <label class=\\\"control-label\\\" for=\\\"roleName\\\">Create new role</label> -->\\r\\n      <input formControlName=\\\"roleName\\\" placeholder=\\\"Role name\\\" class=\\\"form-control\\\">\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\">Create New Role</button>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"col-md-6\\\">    \\r\\n      \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <th class=\\\"text-left\\\">Existing Roles\\r\\n          </th>\\r\\n          <th>\\r\\n          </th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let role of roles\\\">\\r\\n          <td class=\\\"text-left\\\">\\r\\n            {{role}}\\r\\n          </td>\\r\\n          <td *ngIf=\\\"role !== 'Admin'\\\" class=\\\"float-right\\\">\\r\\n            <button class=\\\"btn btn-outline-danger\\\" (click)=\\\"deleteRole(role)\\\">Delete</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { RoleService } from '../shared/role.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-role-list',\r\n  templateUrl: './role-list.component.html'\r\n})\r\nexport class RoleListComponent implements OnInit {\r\n  roles: string[];\r\n  newRoleForm: FormGroup;\r\n\r\n  constructor(private roleService: RoleService) { }\r\n\r\n  ngOnInit() {\r\n    this.getRoles();\r\n  }\r\n\r\n  buildForm(){\r\n    this.newRoleForm = new FormGroup({\r\n      roleName: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  getRoles(){\r\n    this.roleService.getRoles().subscribe(\r\n      (rez) => {\r\n        this.roles = rez;        \r\n        this.buildForm();\r\n       },\r\n      err => { \r\n        console.log(err.error)\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteRole(role: string){\r\n    this.roleService.delete(role).subscribe(() => {\r\n      this.getRoles();\r\n    })\r\n  }\r\n\r\n  createRole(){\r\n    if(!this.newRoleForm.valid){\r\n      return;\r\n    }\r\n    const postedRole = this.newRoleForm.controls['roleName'].value as string;\r\n    this.roleService.create(postedRole).subscribe((rez) => {\r\n      this.roles.push(postedRole);\r\n      this.buildForm();\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n  url = environment.apiUrl + 'admin/security/roles';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRoles(){\r\n     return this.http.get<string[]>(this.url);\r\n  }\r\n\r\n  delete(role: string)\r\n  {\r\n    return this.http.delete(this.url + '/' + role);\r\n  }\r\n\r\n  create(roleName: string){\r\n    return this.http.post(this.url + '/' + roleName, null);\r\n    // const headers = new HttpHeaders().set('Content-type', 'application/json');\r\n    // return this.http.post(this.url, JSON.stringify(roleName)\r\n    //   , {headers: headers  }\r\n    //  )\r\n  }\r\n}\r\n","\r\nexport class UserModel {\r\n    name: string;\r\n    password: string;\r\n    roles: RoleModel[];\r\n    selectedRoles: string[];\r\n}\r\n\r\nexport class RoleModel {\r\n    name: string;\r\n    isChecked: boolean;\r\n}\r\n ","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserModel } from './user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  url = environment.apiUrl + 'admin/security/users';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsers(){\r\n     return this.http.get<UserModel[]>(this.url);\r\n  }\r\n\r\n  getUserByName(userName: string) {\r\n    return this.http.get<UserModel>(this.url + '/' + userName)\r\n  }\r\n\r\n  delete(userName: string)\r\n  {\r\n    return this.http.delete(this.url + '/' + userName);\r\n  }\r\n\r\n  create(userModel: UserModel){\r\n    //return this.http.post(this.url + '/' + roleName, null);\r\n     const headers = new HttpHeaders().set('Content-type', 'application/json');\r\n     return this.http.post(this.url, JSON.stringify(userModel)\r\n      , {headers: headers  }\r\n     )\r\n  }\r\n\r\n  update(userModel: UserModel){\r\n    //return this.http.post(this.url + '/' + roleName, null);\r\n     const headers = new HttpHeaders().set('Content-type', 'application/json');\r\n     return this.http.post(this.url, JSON.stringify(userModel)\r\n      , {headers: headers  }\r\n     )\r\n  }\r\n}\r\n","module.exports = \"<p>\\r\\n  user-details works!\\r\\n</p>\\r\\n\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <form>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"name\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\r\\n      <div class=\\\"col-sm-10\\\">\\r\\n        <input type=\\\"text\\\" readonly class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"model.name\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"roles\\\" class=\\\"col-sm-2 col-form-label\\\">Roles</label>\\r\\n      <div class=\\\"col-sm-4\\\" >\\r\\n        <div class=\\\"form-check float-left\\\" *ngFor=\\\"let role of model.roles\\\">\\r\\n            <label class=\\\"form-check-label\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" [checked]=\\\"role.isChecked\\\" (change)=\\\"role.isChecked = !role.isChecked\\\" >{{role.name}}\\r\\n              </label>\\r\\n          <!-- <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\"  [(checked)]=\\\"role.isChecked\\\" >{{role.name}}\\r\\n          </label> -->\\r\\n        </div>        \\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"form-group row\\\">\\r\\n      <div class=\\\"col-sm-4 offset-sm-2\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"update()\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserModel } from '../shared/user.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../shared/user.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styles: []\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n  model: UserModel = new UserModel();\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private userService: UserService) {\r\n    if (this.activatedRoute.snapshot.params['userName']) {\r\n      this.model.name = this.activatedRoute.snapshot.params['userName'];\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUser();\r\n  }\r\n\r\n  getUser() {\r\n    if (this.model.name != null) {\r\n      // edit\r\n      this.userService.getUserByName(this.model.name)\r\n        .subscribe(rez => {\r\n          this.model = rez;          \r\n        }\r\n          , error => console.log(error));\r\n    }\r\n  }\r\n\r\n  update()  {\r\n    console.log(this.model);\r\n    this.userService.update(this.model).subscribe((rez) => {\r\n      this.getUser();\r\n    })\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"card card-body bg-light\\\" *ngIf=\\\"users\\\">\\r\\n  <form [formGroup]=\\\"newUserForm\\\" (ngSubmit)=\\\"createUser()\\\" class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <!-- <label class=\\\"control-label\\\" for=\\\"roleName\\\">Create new role</label> -->\\r\\n      <input formControlName=\\\"userName\\\" placeholder=\\\"User name\\\" class=\\\"form-control\\\">\\r\\n      <input formControlName=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\">\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\">Create New Account</button>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"col-md-6\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <tr>\\r\\n          <th class=\\\"text-left\\\">Name\\r\\n          </th>\\r\\n          <th>\\r\\n          </th>\\r\\n        </tr>\\r\\n        <tr *ngFor=\\\"let user of users\\\">\\r\\n          <td class=\\\"text-left\\\">\\r\\n            {{user.name}}\\r\\n          </td>\\r\\n          <td class=\\\"float-right\\\">\\r\\n              <a [routerLink]=\\\"['/security/users/edit', user.name]\\\"> Edit</a>    \\r\\n            <button class=\\\"btn btn-link\\\" (click)=\\\"deleteUser(user)\\\">Delete</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UserService } from '../shared/user.service';\r\nimport { UserModel } from '../shared/user.model';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html'\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  users: UserModel[];\r\n  newUserForm: FormGroup;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.getUsers();\r\n  }\r\n\r\n  buildForm(){\r\n    this.newUserForm = new FormGroup({\r\n      userName: new FormControl('', [Validators.required]),\r\n      password: new FormControl('', [Validators.required])\r\n    });\r\n  }\r\n\r\n  getUsers(){\r\n    this.userService.getUsers().subscribe(\r\n      (rez) => {\r\n        this.users = rez;        \r\n        this.buildForm();\r\n       },\r\n      err => { \r\n        console.log(err.error)\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteUser(user: UserModel){\r\n    this.userService.delete(user.name).subscribe(() => {\r\n      this.getUsers();\r\n    })\r\n  }\r\n\r\n  createUser(){\r\n    if(!this.newUserForm.valid){\r\n      return;\r\n    }\r\n    const postedUser = new UserModel();\r\n    postedUser.name = this.newUserForm.controls['userName'].value as string;\r\n    postedUser.password = this.newUserForm.controls['password'].value as string;\r\n    this.userService.create(postedUser).subscribe((rez) => {\r\n      this.users.push(postedUser);\r\n      this.buildForm();\r\n    })\r\n  }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ValidationService } from '../services/validation.service';\r\n\r\n@Component({\r\n  selector: 'control-messages',\r\n  template: `<div class=\"error float-left\" *ngIf=\"errorMessage !== null\">{{errorMessage}}</div>`\r\n})\r\nexport class ControlMessagesComponent {\r\n  @Input() control: FormControl;\r\n  constructor() { }\r\n\r\n  get errorMessage() {\r\n    for (let validatorName in this.control.errors) {\r\n      if (this.control.errors.hasOwnProperty(validatorName) && this.control.touched) {\r\n        return ValidationService.getValidatorErrorMessage(validatorName, this.control.errors[validatorName]);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem('currentUser')) {\r\n        // logged in so return true\r\n        return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n    return false;\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../../security/account/shared/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].indexOf(err.status) !== -1) {\r\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TenantInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        req = req.clone({\r\n            setHeaders: {\r\n                'Tenant': 'WpCore2'\r\n            }\r\n        });\r\n\r\n        return next.handle(req);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public exportExcel(excelFileName: string): void {\r\n    this.getExcelFromServer()\r\n      .subscribe(\r\n        (blob) => {\r\n          this.saveAsExcelFile(blob, excelFileName);\r\n        },\r\n        response => {\r\n          console.log(\"POST in error\", response);\r\n        },\r\n        () => {\r\n          console.log(\"POST observable is now completed.\");\r\n        });;\r\n  }\r\n\r\n  getExcelFromServer(): Observable<Blob> {\r\n    // const headers = new HttpHeaders({\r\n    //   'Content-Type': 'application/json',\r\n    //   'Accept': 'application/json'\r\n    // });\r\n\r\n    return this.httpClient.get<Blob>('https://localhost:5001/api/admin/webpage/download',\r\n      {\r\n        // headers: headers, \r\n        responseType: 'blob' as 'json'\r\n      });\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + EXCEL_EXTENSION);\r\n  }\r\n}","export class ValidationService {\r\n    static getValidatorErrorMessage(validatorName: string, validatorValue?: any) {\r\n        let config = {\r\n            'required': `Required`,\r\n            'invalidEmailAddress': 'Invalid email address',\r\n            'invalidPassword': 'Invalid password. Password must be at least 6 characters long, and contain a number.',\r\n            'minlength': `Please enter atleast ${validatorValue.requiredLength} characters`\r\n        };\r\n\r\n        return config[validatorName];\r\n    }\r\n\r\n\r\n    static emailValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidEmailAddress': true };\r\n        }\r\n    }\r\n\r\n    static passwordValidator(control) {\r\n        // {6,100}           - Assert password is between 6 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPassword': true };\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { ExcelService } from './services/excelService';\r\nimport { ControlMessagesComponent } from './components/control-messages.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    imports: [     \r\n    CommonModule,\r\n    ],\r\n    declarations: [ControlMessagesComponent,],\r\n    providers: [AuthGuard, ExcelService],\r\n    exports: [ControlMessagesComponent]\r\n})\r\nexport class SharedModule { }","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // apiUrl: 'http://localhost:59734/api/',\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  // apiUrl: 'http://wpcorelocal/api/',\r\n  tokenService: 'token'  \r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}