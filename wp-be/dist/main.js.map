{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/authentication.service.ts","webpack:///./src/app/account/login.component.html","webpack:///./src/app/account/login.component.ts","webpack:///./src/app/admin/tenant/tenant.service.ts","webpack:///./src/app/admin/webpage/webpage.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/shared/components/control-messages.component.ts","webpack:///./src/app/shared/components/modals/confirm-modal.component.html","webpack:///./src/app/shared/components/modals/confirm-modal.component.ts","webpack:///./src/app/shared/guard/auth.guard.ts","webpack:///./src/app/shared/interceptors/authorization.interceptor.ts","webpack:///./src/app/shared/interceptors/error.interceptor.ts","webpack:///./src/app/shared/interceptors/tenant.interceptor.ts","webpack:///./src/app/shared/services/serviceBase.ts","webpack:///./src/app/shared/services/validation.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/expense/expense.module\": [\n\t\t\"./src/app/admin/expense/expense.module.ts\",\n\t\t\"admin-expense-expense-module\"\n\t],\n\t\"./admin/webpage/webpage.module\": [\n\t\t\"./src/app/admin/webpage/webpage.module.ts\",\n\t\t\"admin-webpage-webpage-module\"\n\t],\n\t\"./configuration/configuration.module\": [\n\t\t\"./src/app/configuration/configuration.module.ts\",\n\t\t\"configuration-configuration-module\"\n\t],\n\t\"./security/security.module\": [\n\t\t\"./src/app/security/security.module.ts\",\n\t\t\"security-security-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","\r\nimport {map} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {  \r\n  public token: string;\r\n\r\n  constructor(private _http: HttpClient){\r\n    // set token if saved in local storage\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.token = currentUser && currentUser.token;\r\n   }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    \r\n    const url = environment.apiUrl + environment.tokenService;\r\n    var headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json; charset=utf-8');\r\n\r\n    return this._http.post<any>(url, { Email: username, Password: password }, { headers: headers })\r\n    .pipe(map(user => {\r\n        // login successful if there's a jwt token in the response\r\n        let token = user && user.token;\r\n        if (token) {\r\n          this.token = token;\r\n\r\n          // store username and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('currentUser', JSON.stringify({username: username, token: token}));\r\n          // return true to indicate successful login\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      }));\r\n  }\r\n\r\n  logout(): void {\r\n    this.token = null;\r\n    localStorage.removeItem('currentUser');\r\n    //use sessionStorage to logout when browser closes\r\n\r\n  }\r\n  \r\n  isAuthenticated(): boolean {\r\n    if (localStorage.getItem('currentUser')) {\r\n      // logged in so return true\r\n      return true;\r\n  }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-sm-4 offset-sm-4 text-center\\\">\\r\\n\\t\\t<img class=\\\"mb-4\\\" src=\\\"https://getbootstrap.com/assets/brand/bootstrap-solid.svg\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\r\\n\\t\\t<h1 class=\\\"h3 mb-3 font-weight-normal\\\">Please sign in</h1>\\r\\n\\t\\t<select class=\\\"form-control\\\" (change)= \\\"onChange($event.target.value)\\\">\\r\\n\\t\\t\\t<option>Select a tenant</option>\\t\\t\\t\\r\\n\\t\\t\\t<option *ngFor=\\\"let tenant of tenants\\\" [selected]=\\\"tenantName == tenant.tenantName\\\"  value={{tenant.tenantName}}>{{tenant.tenantName}}</option>\\r\\n\\t\\t</select>\\r\\n\\r\\n\\t\\t<form (submit)=\\\"loginUser()\\\" class=\\\"form-signin\\\">\\r\\n\\r\\n\\t\\t\\t<label for=\\\"username\\\" class=\\\"sr-only\\\">User name</label>\\r\\n\\t\\t\\t<input [(ngModel)]=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User name\\\"\\r\\n\\t\\t\\t\\trequired autofocus>\\r\\n\\t\\t\\t<label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n\\t\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\"\\r\\n\\t\\t\\t\\trequired>\\r\\n\\t\\t\\t<div class=\\\"checkbox mb-3\\\">\\r\\n\\t\\t\\t\\t<label>\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\r\\n\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n\\t\\t</form>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { TenantService } from '../admin/tenant/tenant.service';\r\nimport { TenantModel } from '../admin/tenant/tenant.model';\r\nimport { AlertService } from 'ngx-alerts';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  tenants: Array<TenantModel> = [];\r\n  tenantName: string;\r\n  username: string;\r\n  password: string;\r\n\r\n  constructor(private router: Router, \r\n    private auhenticationService: AuthenticationService,\r\n    private tenantService: TenantService,\r\n    private alertService: AlertService) { }\r\n\r\n  ngOnInit() { \r\n    this.tenantName = localStorage.getItem('tenantName');\r\n    this.tenantService.getAll().subscribe(\r\n      rez => this.tenants = rez,      \r\n      err => { this.alertService.danger(err); }\r\n    );\r\n  }\r\n\r\n  loginUser() {\r\n    console.log(this.tenants);\r\n    this.auhenticationService.login(this.username, this.password)\r\n      .subscribe(result => {\r\n        if (result === true) {\r\n          //window.location.href = \"#\";\r\n          this.router.navigate(['admin/webpage/list']);\r\n        } else {\r\n          // login failed\r\n          this.alertService.danger('Username or password is incorrect');\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  onChange(tenantName) {\r\n    localStorage.setItem('tenantName', tenantName);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { TenantModel } from './tenant.model';\nimport { catchError } from 'rxjs/operators';\nimport {throwError as observableThrowError } from 'rxjs';\nimport { ServiceBase } from '../../shared/services/serviceBase';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TenantService extends ServiceBase {\n  constructor(private http: HttpClient) {\n    super('admin/tenant/');\n  }\n\n   getAll() {\n     return this.http.get<TenantModel[]>(this.url)\n     .pipe(catchError(super.errorHandler));     \n   }   \n}\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport {Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { WebPage, BaseModel } from './webpage.model';\r\nimport { ServiceBase } from '../../shared/services/serviceBase';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebpageService extends ServiceBase {\r\n\r\n  constructor(private http: HttpClient) {\r\n    super('admin/webpage/');\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get<WebPage[]>(this.url)\r\n    .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  getPageById(id) {\r\n    return this.http.get<WebPage>(this.url + id)\r\n    .pipe(catchError(this.errorHandler));\r\n  }  \r\n\r\n  delete(id) {\r\n    return  this.http.delete(this.url + id)\r\n    .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  save(t: any) : Observable<any> {\r\n    const model = t as BaseModel; \r\n    const headers = new HttpHeaders().set('Content-type', 'application/json');    \r\n    if(model.id > 0)\r\n    {\r\n      //edit\r\n      return this.http.put<any>(this.url + model.id, JSON.stringify(model), {\r\n        headers: headers,\r\n      }).pipe(catchError(this.errorHandler))\r\n    } else {\r\n      // new      \r\n      return this.http.post<any>(this.url, JSON.stringify(model), {\r\n        headers: headers,\r\n      }).pipe(catchError(this.errorHandler))\r\n     }\r\n  } \r\n}\r\n","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    <!-- To show this line of text remove fixed-top from nav component -->\\r\\n    Welcome to {{title}}!\\r\\n  </h1>\\r\\n\\r\\n  <ngx-alerts></ngx-alerts>\\r\\n  <app-nav></app-nav>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n \\r\\n\\r\\n  <!-- Footer -->\\r\\n<footer class=\\\"page-footer font-small blue bg-light\\\">\\r\\n\\r\\n  <!-- Copyright -->\\r\\n  <div class=\\\"footer-copyright text-center py-3\\\">Made by Nasir\\r\\n  </div>\\r\\n  <!-- Copyright -->\\r\\n\\r\\n</footer>\\r\\n<!-- Footer -->\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { AlertModule } from 'ngx-alerts';\r\nimport { AppComponent } from './app.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AppRouting } from './app.routing';\r\nimport { ErrorInterceptor } from './shared/interceptors/error.interceptor';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { TenantInterceptor } from './shared/interceptors/tenant.interceptor';\r\nimport { AuthorizationInterceptor } from './shared/interceptors/authorization.interceptor';\r\nimport { AccountModule } from './account/account.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRouting,\r\n    AccountModule,\r\n    AlertModule.forRoot({ maxMessages: 5, timeout: 5000 }),\r\n    BsDropdownModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true, },\r\n    { provide: HTTP_INTERCEPTORS, useClass: TenantInterceptor, multi: true, },\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthorizationInterceptor, multi: true, }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './shared/guard/auth.guard';\r\nimport { LoginComponent } from './account/login.component';\r\n\r\nconst ROUTES: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'admin/webpage', canActivate: [AuthGuard], loadChildren: './admin/webpage/webpage.module#WebpageModule' },\r\n    { path: 'admin/expense', canActivate: [AuthGuard], loadChildren: './admin/expense/expense.module#ExpenseModule' },\r\n    { path: 'security', canActivate: [AuthGuard], loadChildren: './security/security.module#SecurityModule' },\r\n    { path: 'config', canActivate: [AuthGuard], loadChildren: './configuration/configuration.module#ConfigurationModule' },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const AppRouting = RouterModule.forRoot(ROUTES);","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['']\\\">WpCore </a>\\r\\n\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\"\\r\\n      aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <!-- admin -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['admin/webpage/list']\\\"><i class=\\\"fa fa-bars\\\"></i> webpages</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['admin/expense/list']\\\"><i class=\\\"fa fa-money\\\"></i> expenses</a>\\r\\n        </li>\\r\\n        <div class=\\\"btn-group\\\" dropdown>\\r\\n          <button id=\\\"button-basic\\\" dropdownToggle type=\\\"button\\\" class=\\\"btn btn-link\\\" aria-controls=\\\"dropdown-basic\\\">\\r\\n            <i class=\\\"fa fa-lock\\\"></i> Security <span class=\\\"caret\\\"></span>\\r\\n          </button>\\r\\n          <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['security/roles']\\\">Roles</a></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['security/users']\\\">Users</a></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a></li>\\r\\n            <li class=\\\"divider dropdown-divider\\\"></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Separated link</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n        <div class=\\\"btn-group\\\" dropdown>\\r\\n          <button id=\\\"button-basic\\\" dropdownToggle type=\\\"button\\\" class=\\\"btn btn-link\\\" aria-controls=\\\"dropdown-basic\\\">\\r\\n            <i class=\\\"fa fa-cogs\\\"></i> Configuration <span class=\\\"caret\\\"></span>\\r\\n          </button>\\r\\n          <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['config/acl']\\\">Access control list</a></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['config/install']\\\">Install</a></li>\\r\\n            <li class=\\\"divider dropdown-divider\\\"></li>\\r\\n            <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Separated link</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n\\r\\n\\r\\n\\r\\n        <!-- <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">About</a>\\r\\n        </li> -->\\r\\n      </ul>\\r\\n      <!-- <ul class=\\\"navbar-nav\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"https://github.com/nasir016g\\\">\\r\\n              <i class=\\\"fa fa-github\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\r\\n        <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n      </form> -->\\r\\n    </div>\\r\\n\\r\\n    <a class=\\\"ml-auto\\\" href=\\\"http://localhost:9000\\\">Go to website</a>\\r\\n\\r\\n    <!-- login -->\\r\\n    <div *ngIf=\\\"isAuthenticated\\\">\\r\\n      <a [routerLink]=\\\"\\\" class=\\\"nav-link m-2\\\" (click)=\\\"logout($event)\\\">Logout</a>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isAuthenticated\\\">\\r\\n      <a [routerLink]=\\\"['login']\\\" class=\\\" nav-link m-2\\\">Login</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '../account/authentication.service';\r\nimport { WebPage } from '../admin/webpage/webpage.model';\r\nimport { Router } from '@angular/router';\r\nimport { WebpageService } from '../admin/webpage/webpage.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html'\r\n})\r\nexport class NavComponent implements OnInit {\r\n  webpages: Array<WebPage> = [];\r\n  errorMessage: any;\r\n  isCollapsed = true;\r\n  isAuthenticated: boolean\r\n  constructor(private pageService: WebpageService, public authenticationService: AuthenticationService, private router: Router) {\r\n    this.isAuthenticated = authenticationService.isAuthenticated();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getNavigations();\r\n  }\r\n\r\n  getNavigations() {\r\n    this.pageService.getAll().subscribe(\r\n      res => this.webpages = res,\r\n      err => {\r\n        this.errorMessage = err.error\r\n      }\r\n    );\r\n  }  \r\n\r\n  logout(event) {\r\n    event.preventDefault;\r\n    this.authenticationService.logout();\r\n    window.location.href = \"login\";\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ValidationService } from '../services/validation.service';\r\n\r\n@Component({\r\n  selector: 'control-messages',\r\n  template: `<div class=\"error float-left\" *ngIf=\"errorMessage !== null\">{{errorMessage}}</div>`\r\n})\r\nexport class ControlMessagesComponent {\r\n  @Input() control: FormControl;\r\n  constructor() { }\r\n\r\n  get errorMessage() {\r\n    for (let validatorName in this.control.errors) {\r\n      if (this.control.errors.hasOwnProperty(validatorName) && this.control.touched) {\r\n        return ValidationService.getValidatorErrorMessage(validatorName, this.control.errors[validatorName]);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","module.exports = \"<!-- <div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title\\\">Delete</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div> -->\\n  <div class=\\\"modal-body text-center\\\">\\n    <p>Are you sure you want to delet?</p>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"confirm()\\\" >Yes</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"decline()\\\" >No</button>\\n  </div>\\n\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap';\n//import { EventEmitter } from 'events';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html'\n})\nexport class ConfirmModalComponent implements OnInit {\n\n  @Output()\n  confirmEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit() {\n  }  \n \n  confirm(): void {\n    this.confirmEvent.emit(true);\n    this.bsModalRef.hide();\n  }\n \n  decline(): void {\n    this.confirmEvent.emit(false);\n    this.bsModalRef.hide();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem('currentUser')) {\r\n        // logged in so return true\r\n        return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n    return false;\r\n}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../../account/authentication.service';\r\n\r\n@Injectable()\r\nexport class AuthorizationInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        req = req.clone({\r\n            setHeaders: {\r\n                Authorization: 'Bearer ' + this.authenticationService.token\r\n            }\r\n        });\r\n\r\n        return next.handle(req);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../../account/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from 'ngx-alerts';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService, private alertService: AlertService, private router: Router) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if ([401, 403].indexOf(err.status) !== -1) {\r\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n                this.authenticationService.logout();\r\n                this.router.navigate(['/login']);\r\n             //   location.reload(true);\r\n            }\r\n\r\n           // const error = err.error || err.statusText;\r\n           if (typeof err.error === 'string' || err.error instanceof String)  {\r\n            this.alertService.danger(err.error);            \r\n           } else {\r\n            for (var fieldName in err.error) {\r\n                this.alertService.danger(err.error[fieldName]);\r\n              }\r\n           }\r\n           \r\n            return throwError(err);\r\n        }))\r\n    }\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TenantInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const tenantName = localStorage.getItem('tenantName');\r\n        if(tenantName){\r\n            req = req.clone({\r\n                setHeaders: {\r\n                    'Tenant': tenantName\r\n                }\r\n            });\r\n        }        \r\n\r\n        return next.handle(req);\r\n    }\r\n\r\n}","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport {throwError as observableThrowError } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport class ServiceBase{\r\n  public url: string;\r\n  /**\r\n   *\r\n   */\r\n  constructor(urlPath: string) {\r\n    this.url = environment.apiUrl + urlPath;\r\n  }\r\n\r\n   public errorHandler(error: HttpErrorResponse) { \r\n        console.log(error);  \r\n        return observableThrowError(error || 'Internal server error');\r\n      }\r\n\r\n}","export class ValidationService {\r\n    static getValidatorErrorMessage(validatorName: string, validatorValue?: any) {\r\n        let config = {\r\n            'required': `Required`,\r\n            'invalidEmailAddress': 'Invalid email address',\r\n            'invalidPassword': 'Invalid password. Password must be at least 6 characters long, and contain a number.',\r\n            'minlength': `Please enter atleast ${validatorValue.requiredLength} characters`\r\n        };\r\n\r\n        return config[validatorName];\r\n    }\r\n\r\n\r\n    static emailValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidEmailAddress': true };\r\n        }\r\n    }\r\n\r\n    static passwordValidator(control) {\r\n        // {6,100}           - Assert password is between 6 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPassword': true };\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\nimport { ControlMessagesComponent } from './components/control-messages.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { TabsModule, TooltipModule, CollapseModule, ModalModule, PaginationModule } from 'ngx-bootstrap';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { ConfirmModalComponent } from './components/modals/confirm-modal.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        HttpClientModule,\r\n        AngularMultiSelectModule,\r\n        PaginationModule.forRoot(),\r\n        TabsModule.forRoot(),  // must include here (admin)],\r\n        TooltipModule.forRoot(), // must include here (admin)\r\n        CollapseModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n        BsDatepickerModule.forRoot(),\r\n    ],\r\n    declarations: [\r\n        ControlMessagesComponent, \r\n        ConfirmModalComponent, \r\n    ],\r\n    entryComponents: [\r\n        ConfirmModalComponent\r\n    ],\r\n    exports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        PaginationModule,\r\n        AngularMultiSelectModule,\r\n        ReactiveFormsModule,\r\n        ControlMessagesComponent,\r\n        TabsModule,\r\n        TooltipModule,\r\n        CollapseModule,\r\n        ModalModule,\r\n        BsDatepickerModule\r\n    ]\r\n})\r\nexport class SharedModule { }","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // apiUrl: 'http://localhost:59734/api/',\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  // apiUrl: 'http://wpcorelocal/api/',\r\n  tokenService: 'token'  \r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}