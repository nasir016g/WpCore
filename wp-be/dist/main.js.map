{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guard/auth.guard.ts","webpack:///./src/app/_guard/index.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/_services/validation.service.ts","webpack:///./src/app/_shared/components/control-messages.component.ts","webpack:///./src/app/_shared/shared.module.ts","webpack:///./src/app/account/account.module.ts","webpack:///./src/app/account/login/login.component.html","webpack:///./src/app/account/login/login.component.ts","webpack:///./src/app/admin/webpage/shared/admin-webpage.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/website/home/home.component.html","webpack:///./src/app/website/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"admin-admin-module\"\n\t],\n\t\"./website/website.module\": [\n\t\t\"./src/app/website/website.module.ts\",\n\t\t\"website-website-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (localStorage.getItem('currentUser')) {\r\n        // logged in so return true\r\n        return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\r\n    return false;\r\n}\r\n}\r\n","export * from './auth.guard';","\r\nimport {map} from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {  \r\n  public token: string;\r\n\r\n  constructor(private _http: Http){\r\n    // set token if saved in local storage\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    this.token = currentUser && currentUser.token;\r\n   }\r\n\r\n\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    \r\n    const url = environment.apiUrl + environment.tokenService;\r\n    var headers = new Headers();\r\n    headers.append('Content-Type', 'application/json; charset=utf-8');\r\n\r\n    return this._http.post(url, { Email: username, Password: password }, { headers: headers }).pipe(\r\n      map((response: Response) => {\r\n        // login successful if there's a jwt token in the response\r\n        let token = response.json() && response.json().token;\r\n        if (token) {\r\n          this.token = token;\r\n\r\n          // store username and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('currentUser', JSON.stringify({username: username, token: token}));\r\n          // return true to indicate successful login\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      }));\r\n  }\r\n\r\n  logout(): void {\r\n    this.token = null;\r\n    localStorage.removeItem('currentUser');\r\n    //use sessionStorage to logout when browser closes\r\n\r\n  }\r\n  \r\n  isAuthenticated(): boolean {\r\n    if (localStorage.getItem('currentUser')) {\r\n      // logged in so return true\r\n      return true;\r\n  }\r\n  }\r\n}\r\n","export * from './authentication.service';\r\nexport * from './validation.service';\r\nexport * from '../admin/webpage/shared/admin-webpage.service';","\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  url = environment.apiUrl + 'greeting';\r\n  \r\n  constructor(private http: HttpClient, \r\n    private auhenticationService: AuthenticationService) { }\r\n\r\n  getGreeting() {\r\n    let headers = new HttpHeaders();\r\n    headers = headers.set('Authorization', 'Bearer ' + this.auhenticationService.token);\r\n    return this.http.get(this.url, {headers: headers, responseType: 'text'});\r\n  }\r\n}\r\n","export class ValidationService {\r\n    static getValidatorErrorMessage(validatorName: string, validatorValue?: any) {\r\n        let config = {\r\n            'required': `Required`,\r\n            'invalidEmailAddress': 'Invalid email address',\r\n            'invalidPassword': 'Invalid password. Password must be at least 6 characters long, and contain a number.',\r\n            'minlength': `Please enter atleast ${validatorValue.requiredLength} characters`\r\n        };\r\n\r\n        return config[validatorName];\r\n    }\r\n\r\n\r\n    static emailValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidEmailAddress': true };\r\n        }\r\n    }\r\n\r\n    static passwordValidator(control) {\r\n        // {6,100}           - Assert password is between 6 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPassword': true };\r\n        }\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ValidationService } from '../../_services';\r\n\r\n@Component({\r\n  selector: 'control-messages',\r\n  template: `<div class=\"error float-left\" *ngIf=\"errorMessage !== null\">{{errorMessage}}</div>`\r\n})\r\nexport class ControlMessagesComponent {\r\n  @Input() control: FormControl;\r\n  constructor() { }\r\n\r\n  get errorMessage() {\r\n    for (let validatorName in this.control.errors) {\r\n      if (this.control.errors.hasOwnProperty(validatorName) && this.control.touched) {\r\n        return ValidationService.getValidatorErrorMessage(validatorName, this.control.errors[validatorName]);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ModalModule, CollapseModule, BsDropdownModule } from 'ngx-bootstrap';\r\nimport { ControlMessagesComponent } from './components/control-messages.component';\r\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        AngularMultiSelectModule,\r\n        FormsModule,\r\n        RouterModule,        \r\n        ModalModule.forRoot(), \r\n        CollapseModule.forRoot(), \r\n        BsDropdownModule.forRoot(),\r\n    ],\r\n    declarations: [ControlMessagesComponent],\r\n    providers: [],\r\n    exports: [CommonModule, RouterModule, FormsModule, ReactiveFormsModule, ControlMessagesComponent, AngularMultiSelectModule]\r\n})\r\nexport class SharedModule { }","import { NgModule } from '@angular/core';\r\n\r\nimport { AuthGuard } from '../_guard/auth.guard';\r\n// import { AuthenticationService } from '../_services/authentication.service';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule    \r\n  ],\r\n  declarations: [LoginComponent],\r\n  providers: [\r\n   // AuthenticationService,\r\n    AuthGuard\r\n  ]\r\n})\r\nexport class AccountModule { }\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n<div class=\\\"col-sm-4 offset-sm-4 text-center\\\">\\r\\n<form (submit)=\\\"loginUser()\\\" class=\\\"form-signin\\\">\\r\\n\\t\\t<img class=\\\"mb-4\\\" src=\\\"https://getbootstrap.com/assets/brand/bootstrap-solid.svg\\\" alt=\\\"\\\" width=\\\"72\\\" height=\\\"72\\\">\\r\\n\\t\\t<h1 class=\\\"h3 mb-3 font-weight-normal\\\">Please sign in</h1>\\r\\n\\t\\t<label for=\\\"username\\\" class=\\\"sr-only\\\">User name</label>\\r\\n\\t\\t<input [(ngModel)]=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User name\\\" required autofocus>\\r\\n\\t\\t<label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n\\t\\t<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\r\\n\\t\\t<div class=\\\"checkbox mb-3\\\">\\r\\n\\t\\t  <label>\\r\\n\\t\\t\\t<input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\r\\n\\t\\t  </label>\\r\\n\\t\\t</div>\\r\\n\\t\\t<button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Sign in</button>\\r\\n\\t  </form>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../_services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html' \r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n  error = '';\r\n\r\n  constructor(private router: Router, private auhenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  loginUser() {\r\n    \r\n    this.auhenticationService.login(this.username, this.password)\r\n      .subscribe(result => {\r\n        if (result === true) { \r\n          window.location.href = \"#\";\r\n        } else {\r\n          // login failed\r\n          this.error = 'Username or password is incorrect';\r\n        }\r\n      });\r\n\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpErrorResponse } from '@angular/common/http/src/response';\r\n\r\nimport {throwError as observableThrowError,  Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\nimport { AdminWebPage, BaseModel } from './admin-webpage.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminWebPageService {\r\n  url = environment.apiUrl + 'admin/webpage/';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getAll() {\r\n    return this._http.get<AdminWebPage[]>(this.url)\r\n    .pipe(\r\n    catchError(this.errorHandler));\r\n  }\r\n\r\n  getPageById(id) {\r\n    return this._http.get<AdminWebPage>(this.url + id)\r\n\r\n    .pipe(\r\n      catchError(this.errorHandler));\r\n  }\r\n\r\n  getPageByVirtualPath(virtualPath) {\r\n    // not from admin area\r\n    const url = environment.apiUrl + 'webpage/'\r\n    return this._http.get<AdminWebPage>(url + virtualPath)\r\n\r\n    .pipe(\r\n      catchError(this.errorHandler));\r\n  }\r\n\r\n  delete(id) {\r\n    return  this._http.delete(this.url + id)\r\n    .pipe(\r\n      catchError(this.errorHandler));\r\n  }\r\n\r\n  save(t: any) : Observable<any> {\r\n    const model = t as BaseModel; \r\n    const headers = new HttpHeaders().set('Content-type', 'application/json');    \r\n    if(model.id > 0)\r\n    {\r\n      //edit\r\n      return this._http.put<any>(this.url + model.id, JSON.stringify(model), {\r\n        headers: headers,\r\n      })\r\n      .pipe(\r\n        catchError(this.errorHandler))\r\n    } else {\r\n      // new      \r\n      return this._http.post<any>(this.url, JSON.stringify(model), {\r\n        headers: headers,\r\n      })\r\n      .pipe(\r\n        catchError(this.errorHandler))\r\n     }\r\n  }\r\n\r\n  errorHandler(error: HttpErrorResponse) { \r\n    console.log(error);  \r\n    return observableThrowError(error || 'Internal server error');\r\n  }\r\n\r\n}\r\n","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    <!-- To show this line of text remove fixed-top from nav component -->\\r\\n    Welcome to {{title}}!\\r\\n  </h1>\\r\\n\\r\\n  <ngx-alerts></ngx-alerts>\\r\\n  <app-nav></app-nav>\\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  <app-footer></app-footer>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BaseRequestOptions, HttpModule } from '@angular/http';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { AlertModule } from 'ngx-alerts';\r\nimport { AccountModule } from './account/account.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { AppRouting } from './app.routing';\r\nimport { UserService } from './_services/user.service';\r\nimport { HomeComponent } from './website/home/home.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n    AlertModule.forRoot({ maxMessages: 5, timeout: 5000 }),\r\n    AppRouting,\r\n    AccountModule\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    FooterComponent,\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    BaseRequestOptions\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './account/login/login.component';\r\nimport { AuthGuard } from './_guard';\r\nimport { HomeComponent } from './website/home/home.component';\r\n\r\nconst ROUTES: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n    { path: 'admin', canActivate: [AuthGuard],  loadChildren: './admin/admin.module#AdminModule' },\r\n    { path: 'website', loadChildren: './website/website.module#WebsiteModule' },\r\n\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\nexport const AppRouting = RouterModule.forRoot(ROUTES);","module.exports = \"<nav class=\\\"navbar fixed-bottom navbar-expand navbar-light bg-light\\\">\\r\\n  <div class=\\\"navbar-text m-auto\\\">\\r\\n    Made by Nasir\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html'\r\n })\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['']\\\">WpCore </a>\\r\\n\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\"\\r\\n      aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <!-- website -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\" *ngIf=\\\"!showAdmin\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li *ngFor=\\\"let wp of webpages\\\" class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['website/page/' + wp.virtualPath]\\\">{{wp.navigationName}}</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <!-- admin -->\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\" *ngIf=\\\"showAdmin\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['admin/webpage/list']\\\"><i class=\\\"fa fa-bars\\\"></i> webpage</a>\\r\\n        </li>\\r\\n        <!-- <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">About</a>\\r\\n        </li> -->\\r\\n      </ul>\\r\\n      <!-- <ul class=\\\"navbar-nav\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"https://github.com/nasir016g\\\">\\r\\n              <i class=\\\"fa fa-github\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\r\\n        <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\r\\n      </form> -->\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isAuthenticated\\\">\\r\\n      <button class=\\\"btn btn-success ml-auto\\\" value=\\\"getBtnText()\\\" (click)=\\\"toggle()\\\">{{getBtnText()}}</button>\\r\\n    </div>\\r\\n\\r\\n    <!-- login -->\\r\\n    <div *ngIf=\\\"isAuthenticated\\\">\\r\\n      <a [routerLink]=\\\"\\\" class=\\\" nav-link m-2\\\" (click)=\\\"logout($event)\\\">Logout</a>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!isAuthenticated\\\">\\r\\n      <a [routerLink]=\\\"['login']\\\" class=\\\" nav-link m-2\\\">Login</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<br>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AdminWebPageService, AuthenticationService } from '../_services';\r\nimport { AdminWebPage } from '../admin/webpage/shared/admin-webpage.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html'\r\n})\r\nexport class NavComponent implements OnInit {\r\n  webpages: Array<AdminWebPage> = [];\r\n  errorMessage: any;\r\n  showAdmin: boolean;\r\n  btnText: string;\r\n  isCollapsed = true;\r\n  isAuthenticated: boolean\r\n  constructor(private pageService: AdminWebPageService, public authenticationService: AuthenticationService, private router: Router) {\r\n    this.isAuthenticated = authenticationService.isAuthenticated();\r\n    this.showAdmin = !this.isAuthenticated;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getNavigations();\r\n  }\r\n\r\n  getNavigations() {\r\n    this.pageService.getAll().subscribe(\r\n      res => this.webpages = res,\r\n      err => {\r\n        this.errorMessage = err.error\r\n      }\r\n    );\r\n  }\r\n\r\n  getBtnText(){\r\n    return this.showAdmin ? 'Website' : 'Admin';\r\n  }\r\n\r\n  toggle() {\r\n    this.showAdmin = !this.showAdmin; \r\n    window.location.href = \"#\";   \r\n  }\r\n\r\n  logout(event) {\r\n    event.preventDefault;\r\n    this.authenticationService.logout();\r\n    window.location.href = \"login\";\r\n  }\r\n\r\n}\r\n","module.exports = \"<h2>\\r\\n  {{greeting}}\\r\\n</h2>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from '../../_services/user.service';\r\nimport { AuthenticationService } from '../../_services';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  greeting: string;\r\n\r\n  constructor(private userService: UserService, \r\n    private authenticationService: AuthenticationService, \r\n    private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.userService.getGreeting()\r\n      .subscribe(result => {\r\n        this.greeting = result.toString();\r\n      });\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // apiUrl: 'http://localhost:59734/api/',\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  // apiUrl: 'http://wpcorelocal/api/',\r\n  tokenService: 'token'  \r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}